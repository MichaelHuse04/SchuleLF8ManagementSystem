@token = eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIzUFQ0dldiNno5MnlQWk1EWnBqT1U0RjFVN0lwNi1ELUlqQWVGczJPbGU0In0.eyJleHAiOjE3NjE3MjY5NTcsImlhdCI6MTc2MTcyMzM1NywianRpIjoiZWU3NDUwNjEtMjg2OC00YjQ4LThiMzctZjkyM2Q4NTEwMzk2IiwiaXNzIjoiaHR0cHM6Ly9rZXljbG9hay5zenV0LmRldi9hdXRoL3JlYWxtcy9zenV0IiwiYXVkIjoiYWNjb3VudCIsInN1YiI6IjU1NDZjZDIxLTk4NTQtNDMyZi1hNDY3LTRkZTNlZWRmNTg4OSIsInR5cCI6IkJlYXJlciIsImF6cCI6ImVtcGxveWVlLW1hbmFnZW1lbnQtc2VydmljZSIsInNlc3Npb25fc3RhdGUiOiIzMTQyODI0OS00MmY0LTRiZmItYWU2Zi04NmU1NTUyMTdjYTAiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHA6Ly9sb2NhbGhvc3Q6NDIwMCJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsicHJvZHVjdF9vd25lciIsIm9mZmxpbmVfYWNjZXNzIiwiZGVmYXVsdC1yb2xlcy1zenV0IiwidW1hX2F1dGhvcml6YXRpb24iLCJ1c2VyIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJlbWFpbCBwcm9maWxlIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsInByZWZlcnJlZF91c2VybmFtZSI6InVzZXIifQ.Cky_DbKml82XTB_tX8vPDXThgknLtQ652EA198U5sg2KM4MZVZGVCr3DmWn2okAW7MPIyTVOZ7yHpSbgxsMAPsaQjgOnbWSJ07o93NXFBcqmSO3WHopKDfIWD5d3I6qfnHP7TpoMmbmcaEiDXus2tKrIYXfRmH7SNnDILOiWTnuVi_1A2KfuiJ9Z36MoXGkWbVPLXgvOZ2mVoQjmKquLM0z0EFa-keJ_FLrKiPukOTwGx59ZiI9nEWC7qEQe8IvMhrOptNEy_CIwm2Iz2HNhA1Sp-m2L0jz9sH4vi2RnyZVkab5nQhO_QJgAWnkE9FD2u_O-6phNqWz_KPOO4Lm_zQ

###
GET localhost:8080/roles
Authorization: Bearer {{token}}

###
GET localhost:8080/hello/
Authorization: Bearer {{token}}

###
POST localhost:8080/hello/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "message": "zifl"
}

###
### Bearer Token für die Anwendung holen
POST http://keycloak.szut.dev/auth/realms/szut/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

grant_type = password &
client_id = employee-management-service &
username = user &
password = test

###
### Create new project -> Vorher den Bearer Token holen und oben als Token setzen
POST http://localhost:8080/project
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "description": "Neues Projekt",
  "startDate": "2025-10-20T09:00:00Z",
  "endDate": "2026-03-01T17:00:00Z",
  "comment": "Initiales Projekt anlegen",
  "customerID": 1,
  "responsibleEmployeeID": 348,
  "assignedEmployees": [
    {
      "employeeId": 348,
      "skill": "Toller Skill"
    }
  ]
}

###
###Delete Project
DELETE http://localhost:8080/project/3
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

###
### Project By ID
GET http://localhost:8080/project/4
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

###
###Get all Project Info
GET http://localhost:8080/project
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

###
### Delete Employee from project
DELETE http://localhost:8080/project/2/assignedEmployee/323
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

###
###Get all Employees from Project
GET http://localhost:8080/project/2/employees
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

###
### update Project
PUT http://localhost:8080/project/1
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "description": "Neues Projekt",
  "startDate": "2025-10-20T09:00:00Z",
  "endDate": "2026-03-01T17:00:00Z",
  "realEndDate": "2027-03-01T17:00:00Z",
  "comment": "Initiales Projekt anlegen",
  "customerID": 1,
  "responsibleEmployeeID": 348,
  "assignedEmployees": [
    {
      "employeeId": 348,
      "skill": "Toller Skill"
    }
  ]
}

###
### asign employee to project with skill
POST http://localhost:8080/project/1/employee/350/skill/Kotlin
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

###
### Employee services Token holen damit du den auf Swagger setzen kann (auf Authorize klicken und da einfügen. Dann kannste da direkt testen. also den Employee service nicht deinen.)






### find all Customers
GET http://localhost:8080/customer
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

###

### find Customer by id
GET http://localhost:8080/customer/1
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

###

### add Customer
POST http://localhost:8080/customer
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "firstName": "Michael",
  "lastName": "Huse",
  "email": "testeeeee"
}

###

### delete Customer by id
DELETE http://localhost:8080/customer/1
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

###

### update Customer by id
PUT http://localhost:8080/customer/3
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "firstName": "Michaelsssssssssss",
  "lastName": "Husesssssssssss",
  "email": "testeeeeesssssssssssssss"
}
###
POST http://keycloak.szut.dev/auth/realms/szut/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

grant_type = password &
client_id = employee-management-service &
username = user &
password = test

###
###
